SELECT
		 EMP_ID, EMP_NAME, DEPT_CODE, JOB_CODE, SALARY, HIRE_DATE 
FROM EMPLOYEE;

-- 입력 받은 급여보다 초과해서 받는 사원의
-- 사번, 이름, 급여 조회
SELECT EMP_NAME,EMP_ID,SALARY
FROM EMPLOYEE
WHERE SALARY > 4000000;

-- 부서명을 입력 받아
-- 해당 부서에 근무하는 사원의
--  사번, 이름, 부서명, 직급명을
--  직급코드 오름차순으로 조회

SELECT EMP_ID,EMP_NAME,
			 NVL(DEPT_TITLE,'없음') DEPT_TITLE,JOB_NAME
FROM EMPLOYEE
JOIN JOB USING (JOB_CODE)
LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
WHERE DEPT_TITLE = '총무부'
ORDER BY JOB_CODE ASC;



-- TB USER 테이블 생성
CREATE TABLE TB_USER(
	 USER_NO NUMBER CONSTRAINT TB_USER_PK PRIMARY KEY,
	 USER_ID VARCHAR2(30) NOT NULL,
	 USER_PW VARCHAR2(30) NOT NULL,
	 USER_NAME VARCHAR2(30) NOT NULL,
	 ENROLL_DATE DATE DEFAULT CURRENT_DATE
	 
);

COMMENT ON COLUMN TB_USER.USER_NO IS '사용자 번호';
COMMENT ON COLUMN TB_USER.USER_ID IS '사용자 아이디';
COMMENT ON COLUMN TB_USER.USER_PW IS '사용자 비밀번호';
COMMENT ON COLUMN TB_USER.USER_NAME IS '사용자 이름';
COMMENT ON COLUMN TB_USER.ENROLL_DATE IS '사용자 가입일';


-- USER_NO 컬럼에 삽입될 시퀀스 생성
CREATE SEQUENCE SEQ_USER_NO NOCACHE;

-- 샘플 데이터 INSERT
INSERT INTO TB_USER
VALUES(SEQ_USER_NO.NEXTVAL, 'user01','pass01','유저일',DEFAULT);

SELECT * FROM TB_USER;

COMMIT;



UPDATE TB_USER
SET USER_NAME = '홍길동'
WHERE USER_ID = 'user01'
AND USER_PW = 'pass01';

ROLLBACK;

-- 아이디, 비밀번호 일치 -> 수정 성공 (1)
-- 아이디, 비밀번호 불일치 -> 수정 실패 (0)


SELECT * FROM TB_USER;

